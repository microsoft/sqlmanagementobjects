// **************************************************************************
//		Copyright (c) Microsoft Corporation.
//
// @File:	smoevt.txt
// @Owner: 	macies
//
// Description:
//
//		This is a template file used by smoevt.pl to autogenerate smoevt.cs.
//
// Notes:
@@@ autogenerated
//
// History:
//		
//		@Version: Yukon
//		000000 MJW  09/10/03 ...
//		
// @EndHeader@
// **************************************************************************

using System;
using System.Collections;
using System.Collections.Specialized;
using System.Text;
#pragma warning disable 1590,1591,1592,1573,1571,1570,1572,1587

namespace Microsoft.SqlServer.Management.Smo
{
	// **************************************************************************
	//
	//				ENUMS
	//
	// **************************************************************************

/// REVIEW-2003/10/28-macies Commented out server event groups
/// Comment out until we figure out how 
/// to deal with server event groups.
/*
	// All events that can be subscribed to at server level
	internal enum ServerEventGroupValues
	{
@@@event_groups
	}
*/
	// All events that can be subscribed to at server level
	internal enum ServerEventValues
	{
@@@server_events
	}

	// All trace events that can be subscribed to at Server level
	internal enum ServerTraceEventValues
	{
@@@trace_events
	}

	// All events that can be subscribed to at database level
	internal enum DatabaseEventValues
	{
@@@database_events
	}

	// All events that can be subscribed to at table level
	internal enum TableEventValues
	{
@@@table_events
	}

	// All events that can be subscribed to at view level
	internal enum ViewEventValues
	{
@@@view_events
	}

	// All events that can be subscribed to at queue level
	internal enum ServiceQueueEventValues
	{
@@@svcq_events
	}

	internal enum UserDefinedFunctionEventValues
	{
@@@function_events
	}

	internal enum StoredProcedureEventValues
	{
@@@sp_events
	}

	internal enum SqlAssemblyEventValues
	{
@@@asm_events
	}

/// REVIEW-2003/10/28-macies Commented out server event groups
/// Commented out until we figure out how to deal with
/// server event groups
/* 
    internal sealed class ServerEventsGroupMapping
    {
        // Private constructor to prevent this class from 
        // being created.
        private ServerEventsGroupMapping() {}

        static ServerEventsGroupMapping()
        {
            mapping = new StringDictionary();
@@@group_mapping
        }

        public static string GetParent(string eventGroup)
        {   
            return mapping[eventGroup];
        }

        private static StringDictionary mapping;
    }
*/
	// All events that can be subscribed to at object level
	// Note that these are artifically routed events.
	// WMI provider does not send these. Therefore
	// These events have generic names. The event type
	// that comes back from the actual event is called
	// 'AlterSchema', "DropSchema' etc.
	internal enum ObjectEventValues
	{
@@@object_events
	}

	// The event type
	public enum EventType
	{
@@@all_events
	}

	// **************************************************************************
	//
	//				CLASSES
	//
	// **************************************************************************

	public partial class ServerDdlTrigger : DdlTriggerBase
	{

		private string StringFromServerDdlTriggerEvent(int evt)
		{
			switch (evt)
			{
@@@ServerDdlTriggerEvent_string_mapping
			}

			throw new SmoException(ExceptionTemplates.UnknownEnumeration("ServerDdlTriggerEvent"));
		}
		internal enum ServerDdlTriggerEventValues
		{
@@@ServerDdlTriggerEvent_enum
		}
	}

	public partial class DatabaseDdlTrigger : DdlTriggerBase
	{

		private string StringFromDatabaseDdlTriggerEvent(int evt)
		{
			switch (evt)
			{
@@@DatabaseDdlTriggerEvent_string_mapping
			}

			throw new SmoException(ExceptionTemplates.UnknownEnumeration("DatabaseDdlTriggerEvent"));
		}
		internal enum DatabaseDdlTriggerEventValues
		{
@@@DatabaseDdlTriggerEvent_enum
		}
	}

	// From here on generated template code
@@@CLASS_TEMPLATE
	// End of generated template code


#if NOT_THESE_EVENTS
// We do not want to expose this.
// Keep around in case we need it. No need to discard. -MJW

	// All available WQL events
	class ServerEvents
	{
		static string[] EventQueryList = 
		{
			@@@class_select_list
		}
	}
#endif
}
