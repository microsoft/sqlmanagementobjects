<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddDomainUserInAdminGroupTaskException" xml:space="preserve">
    <value>Add Domain User In Admin Group Fail, Domain User Name {0}</value>
  </data>
  <data name="AddDomainUserInSQLAdminTaskAddDomainAccountToServiceAccountException" xml:space="preserve">
    <value>Add Domain To Service Account Fail, Domain User Name {0} Domain User Password {1}</value>
  </data>
  <data name="AddDomainUserInSQLAdminTaskAddUserToSqlAdminException" xml:space="preserve">
    <value>Add User To Sql Admin Fail, User Name: {0}</value>
  </data>
  <data name="AddNodeInClusterTaskClusterNotOnlineException" xml:space="preserve">
    <value>Cluster {0} is Not Online, Domain User Name {1}, Domain User Password{2}</value>
  </data>
  <data name="AddNodeInClusterVerificationError" xml:space="preserve">
    <value>AddNodeInClusterVerificationError Machine Name {0}</value>
  </data>
  <data name="AvailabilityGroupNotExists" xml:space="preserve">
    <value>Availability Group Does Not Exist :Group Name:{0}, Server Name {1}</value>
  </data>
  <data name="AvailabilityGroupNotJoined" xml:space="preserve">
    <value>Availability group {0} is not joined on the secondary replica {1}.</value>
  </data>
  <data name="AvailabilityGroupQuorumValidatorException" xml:space="preserve">
    <value>Quorum vote configuration fails, AG Name{0}</value>
  </data>
  <data name="AvailabilityModeCompatibilityWarning" xml:space="preserve">
    <value>None of the secondary replicas can be in synchronous commit mode when the primary replica is in asynchronous commit mode.</value>
  </data>
  <data name="BackupDatabaseTaskException" xml:space="preserve">
    <value>Backup Database {0} fail</value>
  </data>
  <data name="BackupLogTaskException" xml:space="preserve">
    <value>Backup Database {0} Log fail</value>
  </data>
  <data name="BasicAvailabilityGroupIncompatibleException" xml:space="preserve">
    <value>Current configuration is not compatible with BASIC Availability Groups: {0}.</value>
  </data>
  <data name="BasicBackupPriorityReason" xml:space="preserve">
    <value>BASIC Availability Groups only support a Backup Priority of 50.</value>
  </data>
  <data name="BasicListenerReason" xml:space="preserve">
    <value>BASIC Availability Groups do not support Listeners.</value>
  </data>
  <data name="BasicSecondaryRoleReason" xml:space="preserve">
    <value>BASIC Availability Groups do not support readable secondary replicas.</value>
  </data>
  <data name="BasicTooManyDatabasesReason" xml:space="preserve">
    <value>BASIC Availability Groups only support up to one database per availability group.</value>
  </data>
  <data name="BasicTooManyReplicasReason" xml:space="preserve">
    <value>BASIC Availability Groups only support up to two replicas (one primary and one secondary) per availability group.</value>
  </data>
  <data name="ClusterNameOnlineValidatorException" xml:space="preserve">
    <value>Primary Server {0} is offline</value>
  </data>
  <data name="ConfigureSQLForAlwaysonTaskException" xml:space="preserve">
    <value>Fail To Enable Always On for Instance {0}</value>
  </data>
  <data name="ConnectRemotePowersehllError" xml:space="preserve">
    <value>ConnectRemotePowersehllError</value>
  </data>
  <data name="CreateStorageServiceNoStatusException" xml:space="preserve">
    <value>Setup task failed to execute create '{0}' storage service.</value>
  </data>
  <data name="CreateStorageServiceStatusFailException" xml:space="preserve">
    <value>Create storage service {0} failed with following error {1}.</value>
  </data>
  <data name="CreateVirtualDisk2" xml:space="preserve">
    <value>{0}-{1}</value>
  </data>
  <data name="CreatingAvailabilityGroup" xml:space="preserve">
    <value>Creating Availability Group with name {0}.</value>
  </data>
  <data name="CreatingLoginsOnReplica" xml:space="preserve">
    <value>Creating logins {0} on replica {1}.</value>
  </data>
  <data name="DataBaseDiskSizeValidationException" xml:space="preserve">
    <value>Data Disk size upper limit reached: Replica Name {0}, Replica Database key {1} Limit {2}</value>
  </data>
  <data name="DatabasesExistingOnReplica" xml:space="preserve">
    <value>The databases {1} already exist on secondary {0}.</value>
  </data>
  <data name="DatabaseFileNotInDefaultDirectoryException" xml:space="preserve">
    <value>Some database files are not in the default directories. Default data directory: '{0}'. Default log directory: '{1}'. Files not in default directories: '{2}'.</value>
  </data>
  <data name="DeleteDeploymentNoStatusException" xml:space="preserve">
    <value>Delete Deployment {1} failed . Hosted Service Name {0}</value>
  </data>
  <data name="DeleteDeploymentStatusFailException" xml:space="preserve">
    <value>Delete Deployment {1} failed . Hosted Service Name {0}, detail: {2}</value>
  </data>
  <data name="DeleteHostedServiceNoStatusException" xml:space="preserve">
    <value>Delete hosted service {0} failed .</value>
  </data>
  <data name="DeleteHostedServiceStatusFailException" xml:space="preserve">
    <value>Delete hosted service {0} failed with following error {1}.</value>
  </data>
  <data name="DeleteStorageServiceNoStatusException" xml:space="preserve">
    <value>Delete storage service {0} failed .</value>
  </data>
  <data name="DeleteStorageServiceStatusFailException" xml:space="preserve">
    <value>Delete storage service {0} failed with following error {1}.</value>
  </data>
  <data name="DeleteVirtualMachineNoStatusException" xml:space="preserve">
    <value>Delete Virtual Machine Failed{2}, Hosted Service Name :{0}, Deployment Name: {1}</value>
  </data>
  <data name="DeleteVirtualMachineStatusException" xml:space="preserve">
    <value>Delete Virtual Machine Failed{2}, Hosted Service Name :{0}, Deployment Name: {1},Detail :{3}</value>
  </data>
  <data name="DeploymentHealthyValidationDeploymentNotAvailableException" xml:space="preserve">
    <value>HostedService:{0} ,Deployment Counts:{1}</value>
  </data>
  <data name="DeploymentNotExistException" xml:space="preserve">
    <value>Deployment {0} does not exist.</value>
  </data>
  <data name="DeploymentVirtualNetworkConfigurationVirtualNetworkNotMatchException" xml:space="preserve">
    <value>Configuration Virtual Network: {0},Deployment Virtual Network:{1}</value>
  </data>
  <data name="DriveNotFoundOnReplica" xml:space="preserve">
    <value>Could not find drive letter '{0}' on replica '{1}'.</value>
  </data>
  <data name="EnableWindowsFailoverClusterTaskException" xml:space="preserve">
    <value>Enable Windows Server Failover Cluster failed, OS Version {0}</value>
  </data>
  <data name="EnablingXeventOnReplica" xml:space="preserve">
    <value>Enabling {0} Xevent to autostart on replica {1}.</value>
  </data>
  <data name="EncryptionMismatchException" xml:space="preserve">
    <value>The configuration of endpoint data encryption is incompatible between replicas and the endpoint connection will fail. \r\n {0}</value>
  </data>
  <data name="EndpointAuthenticationValidatorException" xml:space="preserve">
    <value>Endpoint {0} uses {1} Authentication, only Negotiate authentication for WA replica is allowed</value>
  </data>
  <data name="FailoverValidationException" xml:space="preserve">
    <value>Replica {0} is a {1}, can not failover to this replica.</value>
  </data>
  <data name="FieldSetUpdate" xml:space="preserve">
    <value>{0} is updated to {1}.</value>
  </data>
  <data name="FormatDataDiskTaskException" xml:space="preserve">
    <value>Format Data Disk Error: ResFile {0}, Disk Label{1} </value>
  </data>
  <data name="FreeSpaceUnavailableForDataFileDrive" xml:space="preserve">
    <value>Could not find the free space in the drive corresponding to the data-file {0} on replica {1}.</value>
  </data>
  <data name="FreeSpaceUnavailableForLogFileDrive" xml:space="preserve">
    <value>Could not find the free space in the drive corresponding to the log-file {0} on replica {1}.</value>
  </data>
  <data name="HostedServiceAffinityGroupConfigurationAffinityGroupNotMatchException" xml:space="preserve">
    <value>Configuration Affinity Group: {0},Hosted Service Affinity Group:{1}</value>
  </data>
  <data name="ImageArgumentNullException" xml:space="preserve">
    <value>image</value>
  </data>
  <data name="ImageNameArgumentNullException" xml:space="preserve">
    <value>image name</value>
  </data>
  <data name="InSufficientFreeSpaceForDataFiles" xml:space="preserve">
    <value>Insufficient free space for data and log files on the server instance that hosts secondary replica {0}</value>
  </data>
  <data name="InSufficientFreeSpaceForLogFiles" xml:space="preserve">
    <value>Insufficient free space for log files on the server instance that hosts secondary replica {0}.</value>
  </data>
  <data name="InvalidAvailabilityGroupException" xml:space="preserve">
    <value>Availability Group with name {0} not found on server {1}.</value>
  </data>
  <data name="InvalidShare" xml:space="preserve">
    <value>'{0}' is not a valid shared network location.</value>
  </data>
  <data name="JoinAvailabilityGroupError" xml:space="preserve">
    <value>Attempting to join availability group resulted in an error.</value>
  </data>
  <data name="MaxHostedServicesException" xml:space="preserve">
    <value>{0} has {1} Hosted Service, reaches the Max Hosted Service</value>
  </data>
  <data name="NoAGSupportImageException" xml:space="preserve">
    <value>{0} does not support AG</value>
  </data>
  <data name="NoStorageServiceWithServiceNameAndAffinityGroupNameException" xml:space="preserve">
    <value>No Storage Service is found for {0}  with Virtual Network Location Hash ID {1}</value>
  </data>
  <data name="NoStorageServiceWithServiceNameException" xml:space="preserve">
    <value>No Storage Service is found for {0}</value>
  </data>
  <data name="NotSqlServerImageException" xml:space="preserve">
    <value>{0} is not a Sql Server Image</value>
  </data>
  <data name="OpenFireWallPortsException" xml:space="preserve">
    <value>Open Port {0} fail</value>
  </data>
  <data name="PrimaryCannotWriteToLocation" xml:space="preserve">
    <value>The primary server '{0}' cannot write to '{1}'.</value>
  </data>
  <data name="PrimaryServerNotHadrEnabled" xml:space="preserve">
    <value>Enabling Always On Availability Groups requires that the server instance is hosted by a Windows Server Failover Cluster (WSFC) node.  The Always On Availability Groups feature must be enabled for server instance '{0}' before you can create an availability group on this instance. To enable this feature, open the SQL Server Configuration Manager, select SQL Server Services, right-click on the SQL Server service name, select Properties, and use the Always On Availability Groups tab of the Server Properties dialog.</value>
  </data>
  <data name="QuorumHelperException" xml:space="preserve">
    <value>Replica {0} does not have a quorum vote</value>
  </data>
  <data name="ReplicaEndpointStringOutputFormat" xml:space="preserve">
    <value>{0}, {1}, {2}, {3}\r\n</value>
  </data>
  <data name="RestartSqlServerException" xml:space="preserve">
    <value>Fail to restart Sql Server {0}</value>
  </data>
  <data name="RestoreDatabaseTaskExcption" xml:space="preserve">
    <value>Restore Database {0} fail</value>
  </data>
  <data name="RestoreLogTaskException" xml:space="preserve">
    <value>Restore Database {0} log Fail</value>
  </data>
  <data name="SecondaryCannotReadLocation" xml:space="preserve">
    <value>The secondary server '{0}' cannot read from '{1}'.</value>
  </data>
  <data name="ServiceOperationStateFailedMsg3" xml:space="preserve">
    <value>OperationId={0}, Status={1}, Code={2}</value>
  </data>
  <data name="ServiceOperationStateFailedMsg4" xml:space="preserve">
    <value>OperationId={0}, Status={1}, Code={2}, Details={3}</value>
  </data>
  <data name="ServiceOperationStatusArgumentNullException" xml:space="preserve">
    <value>null statu</value>
  </data>
  <data name="SubscriptionArgumentNullException" xml:space="preserve">
    <value>subscription</value>
  </data>
  <data name="TaskEventArgsTaskComplete" xml:space="preserve">
    <value>Validation task completed</value>
  </data>
  <data name="TaskEventArgsTaskExecutionCancelled" xml:space="preserve">
    <value>Task Cancelled by User</value>
  </data>
  <data name="TaskEventArgsTaskExecutionFailed" xml:space="preserve">
    <value>Task failed due to following error: {0}</value>
  </data>
  <data name="TaskEventArgsTaskExecutionFailedWithRetry" xml:space="preserve">
    <value>Task failed due to following error: {0}, retrying ....</value>
  </data>
  <data name="TaskEventArgsTaskStarted" xml:space="preserve">
    <value>Task started ....</value>
  </data>
  <data name="TotalPrimaryDatabaseSizeValidationException" xml:space="preserve">
    <value>Total databases size upper limit reached: Limit:{0} GB, Total:{1} MB</value>
  </data>
  <data name="UserDoesNotHaveViewServerStatePermission" xml:space="preserve">
    <value>You do not have permission to perform this action.</value>
  </data>
  <data name="ValidatingDatabaseFileExistingError" xml:space="preserve">
    <value>Checking for the database files on the secondary replica {0} resulted in an error. The following files already exist. {1}</value>
  </data>
  <data name="ValidatingDatabaseFileLocationCompatibility" xml:space="preserve">
    <value>Checking for compatibility of the database file locations on the server instance that hosts replica {0}</value>
  </data>
  <data name="ValidatorEventArgsValidationComplete" xml:space="preserve">
    <value>Validation task completed</value>
  </data>
  <data name="ValidatorEventArgsValidationFailed" xml:space="preserve">
    <value>Validation failed due to following error: {0}</value>
  </data>
  <data name="ValidatorEventArgsValidationFailedWithRetry" xml:space="preserve">
    <value>Validation failed due to following error: {0}, retrying ....</value>
  </data>
  <data name="ValidatorEventArgsValidationStarted" xml:space="preserve">
    <value>Validation started ....</value>
  </data>
  <data name="VirtualNetworkLocationHashIDNullException" xml:space="preserve">
    <value>VirtualNetworkLocationHashID</value>
  </data>
  <data name="WaitForAvailabilityGroupOnline" xml:space="preserve">
    <value>Waiting for Availability Group with name {0} to be created.</value>
  </data>
  <data name="WizardLaunchFailureQuorumLoss" xml:space="preserve">
    <value>The local node is not part of quorum and is therefore unable to process this operation. This may be due to one of the following reasons:\r\n\r\n•   The local node is not able to communicate with the WSFC cluster.\r\n\r\n•   No quorum set across the WSFC cluster.\r\n\r\n For more information on recovering from quorum loss, refer to SQL Server Books Online.\r\n\r\n</value>
  </data>
  <data name="DBMKPasswordIncorrect" xml:space="preserve">
    <value>The password for the database master key is incorrect.</value>
  </data>
  <data name="ValidatingDatabaseNotExistOnSecondary" xml:space="preserve">
    <value>Checking if the selected databases already exist on the server instance that hosts secondary replica {0}</value>
  </data>
  <data name="ValidatingEndpointEncryption" xml:space="preserve">
    <value>Checking whether the endpoint is encrypted using a compatible algorithm</value>
  </data>
  <data name="ValidatingBackupLocation" xml:space="preserve">
    <value>Checking shared network location</value>
  </data>
  <data name="ValidatingAvailabilityMode" xml:space="preserve">
    <value>Checking replica availability mode</value>
  </data>
  <data name="ValidatingDiskSpace" xml:space="preserve">
    <value>Checking for free disk space on the server instance that hosts secondary replica {0}</value>
  </data>
  <data name="ValidatingDatabaseFilesNotExistsOnSecondary" xml:space="preserve">
    <value>Checking for the existence of the database files on the server instance that hosts secondary</value>
  </data>
  <data name="AddDatabaseToExistingAvailabilityGroupText" xml:space="preserve">
    <value>Adding databases to availability group '{0}'.</value>
  </data>
  <data name="AddDatabaseCredentialText" xml:space="preserve">
    <value>Adding database credential for '{0}' on '{1}'.</value>
    <comment>{0} is the user credential being added.  {1} is the database being changed.</comment>
  </data>
  <data name="AddDomainUserInSQLAdminText" xml:space="preserve">
    <value>Adding the domain user '{0}' to SQL Server administrators group.</value>
  </data>
  <data name="AddDomainUserInAdminGroupText" xml:space="preserve">
    <value>Adding the domain user '{0}' to Windows administrators group.</value>
  </data>
  <data name="AddNodeInClusterText" xml:space="preserve">
    <value>Adding node '{0}' in cluster '{1}'.</value>
    <comment>{0} is the machine being added to the cluster.  {1} is the cluster being changed.</comment>
  </data>
  <data name="AddReplicaText" xml:space="preserve">
    <value>Adding replica to availability group '{0}'.</value>
  </data>
  <data name="BackupDatabaseText" xml:space="preserve">
    <value>Creating a full backup for '{0}'.</value>
  </data>
  <data name="BackupLogText" xml:space="preserve">
    <value>Backing up log for '{0}'.</value>
  </data>
  <data name="ConfigureEndpointsText" xml:space="preserve">
    <value>Configuring endpoints.</value>
  </data>
  <data name="CreateAvailabilityGroupListenerText" xml:space="preserve">
    <value>Creating Availability Group Listener '{0}'.</value>
  </data>
  <data name="CreateAvailabilityGroupText" xml:space="preserve">
    <value>Creating availability group '{0}'.</value>
  </data>
  <data name="CreateLoginText" xml:space="preserve">
    <value>Creating Login on replica '{0}'.</value>
  </data>
  <data name="JoinDatabaseToAvailabilityGroupText" xml:space="preserve">
    <value>Joining '{0}' to availability group '{1}' on '{2}'.</value>
    <comment>{0} is the server being added to the availability group.  {1} is the availability group being changed.  {2} is the current primary replica for the availability group.</comment>
  </data>
  <data name="JoinSecondariesText" xml:space="preserve">
    <value>Joining secondaries to availability group '{0}'.</value>
  </data>
  <data name="RestoreDatabaseText" xml:space="preserve">
    <value>Restoring '{0}' on '{1}'.</value>
    <comment>{0} is the database being restored.  {1} is the server it is being restored to.</comment>
  </data>
  <data name="RestoreLogText" xml:space="preserve">
    <value>Restoring '{0}' log on '{1}'.</value>
    <comment>{0} is the database having its logs restored.  {1} is the server it is being restored to.</comment>
  </data>
  <data name="StartAlwaysOnXeventSessionText" xml:space="preserve">
    <value>Starting the '{0}' extended events session on '{1}'.</value>
    <comment>{0} is the extended events session being started.  {1} is the server being changed.</comment>
  </data>
  <data name="UpdateAvailabilityGroupListenerText" xml:space="preserve">
    <value>Updating availability group listener '{0}'.</value>
  </data>
  <data name="WaitForAvailabilityGroupOnlineText" xml:space="preserve">
    <value>Waiting for availability group '{0}' to come online.</value>
  </data>
  <data name="CheckingListenerConfiguration" xml:space="preserve">
    <value>Checking the listener configuration</value>
  </data>
  <data name="ListenerConfigurationWarning" xml:space="preserve">
    <value>The listener is not configured for the availability group. Either configure the listener now on the Specify Replicas page, or use the Add Availability Group Listener dialog after the wizard has completed.</value>
  </data>
  <data name="QuorumValidationTaskText" xml:space="preserve">
    <value>Validating Windows Server Failover Cluster quorum vote configuration.</value>
  </data>
  <data name="DatabaseFileLocationMissingOnReplicaException" xml:space="preserve">
    <value>The following required directories do not exist on replica {0} : {1}.</value>
  </data>
  <data name="ForcedFailoverTaskText" xml:space="preserve">
    <value>Performing forced failover to secondary replica '{0}'</value>
  </data>
  <data name="ManualFailoverTaskText" xml:space="preserve">
    <value>Performing manual failover to secondary replica '{0}'</value>
  </data>
  <data name="ValidatingBasicAvailabilityGroupOptions" xml:space="preserve">
    <value>Checking compatibility of basic availability group options</value>
  </data>
  <data name="ValidatingDatabaseMasterKey" xml:space="preserve">
    <value>Checking password of the database master key</value>
  </data>
  <data name="ValidatingFailoverSettings" xml:space="preserve">
    <value>Validating failover settings for secondary replica '{0}'</value>
  </data>
  <data name="ValidatingWSFCQuorumConfiguration" xml:space="preserve">
    <value>Validating WSFC quorum vote configuration</value>
  </data>
  <data name="WaitForRoleChange" xml:space="preserve">
    <value>Completing the role change for secondary replica '{0}'</value>
  </data>
  <data name="BackupLocationNotProvidedErrorMessage" xml:space="preserve">
    <value>Backup location is not provided</value>
  </data>
</root>